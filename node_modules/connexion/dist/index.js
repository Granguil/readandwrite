function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));

var data = {
  connected: false,
  pseudo: '',
  role: 0,
  typeRole: 'None',
  token: 'NoToken'
};

function Check(_ref) {
  var bool = _ref.bool,
      roleType = _ref.roleType,
      children = _ref.children;
  return /*#__PURE__*/React.createElement("div", null, bool === data.connected && (roleType === 'ALL' || data.typeRole === roleType) ? /*#__PURE__*/React.createElement("div", {
    children: children
  }) : null);
}

var connexion = function connexion(fetchRequest, condition, success, fail) {
  var toGet = function toGet(dataConnexion) {
    if (condition(dataConnexion, data)) {
      success(dataConnexion, data);
    } else {
      fail(dataConnexion, data);
    }
  };

  fetchRequest(toGet);
};

var roleTypeList = {
  USER: 'USER',
  MODERATOR: 'MODERATOR',
  ADMIN: 'ADMIN',
  DEV: 'DEV',
  MANAGER: 'MANAGER'
};
var connexionSearch = function connexionSearch(fetchData, condition, success, fail) {
  connexion(fetchData, condition, success, fail);
};
var dataConnect = data;
var CheckConnexion = function CheckConnexion(_ref) {
  var bool = _ref.bool,
      role = _ref.role,
      children = _ref.children;
  return /*#__PURE__*/React.createElement(Check, {
    bool: bool,
    roleType: role,
    children: children
  });
};

exports.CheckConnexion = CheckConnexion;
exports.connexionSearch = connexionSearch;
exports.dataConnect = dataConnect;
exports.roleTypeList = roleTypeList;
//# sourceMappingURL=index.js.map
